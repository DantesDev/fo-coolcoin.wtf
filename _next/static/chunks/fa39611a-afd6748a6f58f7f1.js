"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[616],{81232:function(e,t,r){r.d(t,{A:function(){return eI},C:function(){return ed},D:function(){return ea},E:function(){return el},I:function(){return ey},N:function(){return C},V:function(){return eA},_:function(){return __awaiter$1},a:function(){return es},b:function(){return getAlchemyWsUrl},c:function(){return EthersEvent},d:function(){return deepCopy},e:function(){return getAlchemyEventTag},f:function(){return fromHex},g:function(){return getAlchemyHttpUrl},h:function(){return ek},i:function(){return isAlchemyEvent},j:function(){return M},k:function(){return eC},l:function(){return logWarn},m:function(){return Alchemy},n:function(){return noop},t:function(){return toHex},v:function(){return verifyAlchemyEventName}});var n,i,o,a,s,l,d,c,u,f,g,h,_,m,v,p,y,E,T,N,A,w,O,R,k,C,I,b,P,S,F,M,B,L,$,U,D,W,G,H,j,x,K,q,z,V,Y,Q,X,J,Z,ee,et,er=r(76303),en=r(57273),ei=r(92598),eo=r(92173);/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function __awaiter$1(e,t,r,n){function adopt(e){return e instanceof r?e:new r(function(t){t(e)})}return new(r||(r=Promise))(function(r,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n.throw(e))}catch(e){i(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())})}function __values(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function __await(e){return this instanceof __await?(this.v=e,this):new __await(e)}function __asyncGenerator(e,t,r){if(!Symbol.asyncIterator)throw TypeError("Symbol.asyncIterator is not defined.");var n,i=r.apply(e,t||[]),o=[];return n={},verb("next"),verb("throw"),verb("return"),n[Symbol.asyncIterator]=function(){return this},n;function verb(e){i[e]&&(n[e]=function(t){return new Promise(function(r,n){o.push([e,t,r,n])>1||resume(e,t)})})}function resume(e,t){try{step(i[e](t))}catch(e){settle(o[0][3],e)}}function step(e){e.value instanceof __await?Promise.resolve(e.value.v).then(fulfill,reject):settle(o[0][2],e)}function fulfill(e){resume("next",e)}function reject(e){resume("throw",e)}function settle(e,t){e(t),o.shift(),o.length&&resume(o[0][0],o[0][1])}}function __asyncValues(e){if(!Symbol.asyncIterator)throw TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e=__values(e),t={},verb("next"),verb("throw"),verb("return"),t[Symbol.asyncIterator]=function(){return this},t);function verb(r){t[r]=e[r]&&function(t){return new Promise(function(n,i){settle(n,i,(t=e[r](t)).done,t.value)})}}function settle(e,t,r,n){Promise.resolve(n).then(function(t){e({value:t,done:r})},t)}}(n=C||(C={})).ETH_MAINNET="eth-mainnet",n.ETH_GOERLI="eth-goerli",n.ETH_SEPOLIA="eth-sepolia",n.OPT_MAINNET="opt-mainnet",n.OPT_GOERLI="opt-goerli",n.OPT_SEPOLIA="opt-sepolia",n.ARB_MAINNET="arb-mainnet",n.ARB_GOERLI="arb-goerli",n.ARB_SEPOLIA="arb-sepolia",n.MATIC_MAINNET="polygon-mainnet",n.MATIC_MUMBAI="polygon-mumbai",n.MATIC_AMOY="polygon-amoy",n.ASTAR_MAINNET="astar-mainnet",n.POLYGONZKEVM_MAINNET="polygonzkevm-mainnet",n.POLYGONZKEVM_TESTNET="polygonzkevm-testnet",n.BASE_MAINNET="base-mainnet",n.BASE_GOERLI="base-goerli",n.BASE_SEPOLIA="base-sepolia",(i=I||(I={})).DEFAULT_TOKENS="DEFAULT_TOKENS",i.ERC20="erc20",(o=b||(b={})).EXTERNAL="external",o.INTERNAL="internal",o.ERC20="erc20",o.ERC721="erc721",o.ERC1155="erc1155",o.SPECIALNFT="specialnft",(a=P||(P={})).TO="TO",a.FROM="FROM",(s=S||(S={})).ASCENDING="asc",s.DESCENDING="desc",(l=F||(F={})).VERIFIED="verified",l.APPROVED="approved",l.REQUESTED="requested",l.NOT_REQUESTED="not_requested",(d=M||(M={})).PENDING_TRANSACTIONS="alchemy_pendingTransactions",d.MINED_TRANSACTIONS="alchemy_minedTransactions",(c=B||(B={})).NATIVE="NATIVE",c.ERC20="ERC20",c.ERC721="ERC721",c.ERC1155="ERC1155",c.SPECIAL_NFT="SPECIAL_NFT",(u=L||(L={})).APPROVE="APPROVE",u.TRANSFER="TRANSFER",($||($={})).ETHERSCAN="ETHERSCAN",(f=U||(U={})).CREATE="CREATE",f.CALL="CALL",f.STATICCALL="STATICCALL",f.DELEGATECALL="DELEGATECALL",(g=D||(D={})).UNSPECIFIED="TRANSACTION_JOB_STATUS_UNSPECIFIED",g.IN_PROGRESS="IN_PROGRESS",g.COMPLETE="COMPLETE",g.ABANDONED="ABANDONED",(h=W||(W={})).V1="V1",h.V2="V2",(_=G||(G={})).MINED_TRANSACTION="MINED_TRANSACTION",_.DROPPED_TRANSACTION="DROPPED_TRANSACTION",_.ADDRESS_ACTIVITY="ADDRESS_ACTIVITY",_.NFT_ACTIVITY="NFT_ACTIVITY",_.NFT_METADATA_UPDATE="NFT_METADATA_UPDATE",_.GRAPHQL="GRAPHQL",(m=H||(H={})).PENDING="pending",m.LATEST="latest",m.SAFE="safe",m.FINALIZED="finalized",m.EARLIEST="earliest",(v=j||(j={})).CALL_TRACER="callTracer",v.PRESTATE_TRACER="prestateTracer",(p=x||(x={})).ERC721="ERC721",p.ERC1155="ERC1155",p.NO_SUPPORTED_NFT_STANDARD="NO_SUPPORTED_NFT_STANDARD",p.NOT_A_CONTRACT="NOT_A_CONTRACT",p.UNKNOWN="UNKNOWN",(y=K||(K={})).Erc721TooManyOwners="Erc721TooManyOwners",y.Erc721TooManyTokens="Erc721TooManyTokens",y.Erc721DishonestTotalSupply="Erc721DishonestTotalSupply",y.MostlyHoneyPotOwners="MostlyHoneyPotOwners",y.OwnedByMostHoneyPots="OwnedByMostHoneyPots",y.LowDistinctOwnersPercent="LowDistinctOwnersPercent",y.HighHoneyPotOwnerPercent="HighHoneyPotOwnerPercent",y.HighHoneyPotPercent="HighHoneyPotPercent",y.HoneyPotsOwnMultipleTokens="HoneyPotsOwnMultipleTokens",y.NoSalesActivity="NoSalesActivity",y.HighAirdropPercent="HighAirdropPercent",y.Unknown="Unknown",(E=q||(q={})).SPAM="SPAM",E.AIRDROPS="AIRDROPS",(z||(z={})).TRANSFERTIME="TRANSFERTIME",(T=V||(V={})).SEAPORT="seaport",T.LOOKSRARE="looksrare",T.X2Y2="x2y2",T.WYVERN="wyvern",T.CRYPTOPUNKS="cryptopunks",T.BLUR="blur",T.UNKNOWN="unknown",(N=Y||(Y={})).BUYER="buyer",N.SELLER="seller",(A=Q||(Q={})).DOES_NOT_EXIST="does_not_exist",A.ALREADY_QUEUED="already_queued",A.IN_PROGRESS="in_progress",A.FINISHED="finished",A.QUEUED="queued",A.QUEUE_FAILED="queue_failed",(X||(X={})).OPENSEA="OpenSea";let ea="demo",es=C.ETH_MAINNET;function getAlchemyHttpUrl(e,t){return`https://${e}.g.alchemy.com/v2/${t}`}function getAlchemyNftHttpUrl(e,t){return`https://${e}.g.alchemy.com/nft/v3/${t}`}function getAlchemyWsUrl(e,t){return`wss://${e}.g.alchemy.com/v2/${t}`}function getAlchemyWebhookHttpUrl(){return"https://dashboard.alchemy.com/api"}(w=J||(J={}))[w.BASE=0]="BASE",w[w.NFT=1]="NFT",w[w.WEBHOOK=2]="WEBHOOK";let el={[C.ETH_MAINNET]:"mainnet",[C.ETH_GOERLI]:"goerli",[C.ETH_SEPOLIA]:"sepolia",[C.OPT_MAINNET]:"optimism",[C.OPT_GOERLI]:"optimism-goerli",[C.OPT_SEPOLIA]:"optimism-sepolia",[C.ARB_MAINNET]:"arbitrum",[C.ARB_GOERLI]:"arbitrum-goerli",[C.ARB_SEPOLIA]:"arbitrum-sepolia",[C.MATIC_MAINNET]:"matic",[C.MATIC_MUMBAI]:"maticmum",[C.MATIC_AMOY]:"maticamoy",[C.ASTAR_MAINNET]:"astar-mainnet",[C.POLYGONZKEVM_MAINNET]:"polygonzkevm-mainnet",[C.POLYGONZKEVM_TESTNET]:"polygonzkevm-testnet",[C.BASE_MAINNET]:"base-mainnet",[C.BASE_GOERLI]:"base-goerli",[C.BASE_SEPOLIA]:"base-sepolia"},ed={"arbitrum-goerli":{chainId:421613,name:"arbitrum-goerli"},"arbitrum-sepolia":{chainId:421614,name:"arbitrum-sepolia"},"astar-mainnet":{chainId:592,name:"astar-mainnet"},sepolia:{chainId:11155111,name:"sepolia"},"optimism-sepolia":{chainId:11155420,name:"optimism-sepolia"},"polygonzkevm-mainnet":{chainId:1101,name:"polygonzkevm-mainnet"},"polygonzkevm-testnet":{chainId:1442,name:"polygonzkevm-testnet"},"base-mainnet":{chainId:8453,name:"base-mainnet"},"base-goerli":{chainId:84531,name:"base-goerli"},"base-sepolia":{chainId:84532,name:"base-sepolia"},maticamoy:{chainId:80002,name:"maticamoy"}};function noop(){}let AlchemyConfig=class AlchemyConfig{constructor(e){this.apiKey=(null==e?void 0:e.apiKey)||ea,this.network=(null==e?void 0:e.network)||es,this.maxRetries=(null==e?void 0:e.maxRetries)||5,this.url=null==e?void 0:e.url,this.authToken=null==e?void 0:e.authToken,this.batchRequests=(null==e?void 0:e.batchRequests)||!1,this.requestTimeout=(null==e?void 0:e.requestTimeout)||0}_getRequestUrl(e){return void 0!==this.url?this.url:e===J.NFT?getAlchemyNftHttpUrl(this.network,this.apiKey):e===J.WEBHOOK?getAlchemyWebhookHttpUrl():getAlchemyHttpUrl(this.network,this.apiKey)}getProvider(){return this._baseAlchemyProvider||(this._baseAlchemyProvider=__awaiter$1(this,void 0,void 0,function*(){let{AlchemyProvider:e}=yield r.e(9955).then(r.bind(r,29955));return new e(this)})),this._baseAlchemyProvider}getWebSocketProvider(){return this._baseAlchemyWssProvider||(this._baseAlchemyWssProvider=__awaiter$1(this,void 0,void 0,function*(){let{AlchemyWebSocketProvider:e}=yield Promise.all([r.e(9955),r.e(1254)]).then(r.bind(r,51254));return new e(this)})),this._baseAlchemyWssProvider}};let ec=!1,eu=!1,ef={debug:1,default:2,info:2,warning:3,error:4,off:5},eg=2,eh=null;function _checkNormalize(){try{let e=[];if(["NFD","NFC","NFKD","NFKC"].forEach(t=>{try{if("test"!=="test".normalize(t))throw Error("bad normalize")}catch(r){e.push(t)}}),e.length)throw Error("missing "+e.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw Error("broken implementation")}catch(e){return e.message}return null}let e_=_checkNormalize();(O=Z||(Z={})).DEBUG="DEBUG",O.INFO="INFO",O.WARNING="WARNING",O.ERROR="ERROR",O.OFF="OFF",(R=ee||(ee={})).UNKNOWN_ERROR="UNKNOWN_ERROR",R.NOT_IMPLEMENTED="NOT_IMPLEMENTED",R.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",R.NETWORK_ERROR="NETWORK_ERROR",R.SERVER_ERROR="SERVER_ERROR",R.TIMEOUT="TIMEOUT",R.BUFFER_OVERRUN="BUFFER_OVERRUN",R.NUMERIC_FAULT="NUMERIC_FAULT",R.MISSING_NEW="MISSING_NEW",R.INVALID_ARGUMENT="INVALID_ARGUMENT",R.MISSING_ARGUMENT="MISSING_ARGUMENT",R.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",R.CALL_EXCEPTION="CALL_EXCEPTION",R.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",R.NONCE_EXPIRED="NONCE_EXPIRED",R.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",R.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",R.TRANSACTION_REPLACED="TRANSACTION_REPLACED",R.ACTION_REJECTED="ACTION_REJECTED";let em="0123456789abcdef";let Logger$1=class Logger$1{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}_log(e,t){let r=e.toLowerCase();null==ef[r]&&this.throwArgumentError("invalid log level name","logLevel",e),eg>ef[r]||console.log.apply(console,t)}debug(...e){this._log(Logger$1.levels.DEBUG,e)}info(...e){this._log(Logger$1.levels.INFO,e)}warn(...e){this._log(Logger$1.levels.WARNING,e)}makeError(e,t,r){if(eu)return this.makeError("censored error",t,{});t||(t=Logger$1.errors.UNKNOWN_ERROR),r||(r={});let n=[];Object.keys(r).forEach(e=>{let t=r[e];try{if(t instanceof Uint8Array){let r="";for(let e=0;e<t.length;e++)r+=em[t[e]>>4]+em[15&t[e]];n.push(e+"=Uint8Array(0x"+r+")")}else n.push(e+"="+JSON.stringify(t))}catch(t){n.push(e+"="+JSON.stringify(r[e].toString()))}}),n.push(`code=${t}`),n.push(`version=${this.version}`);let i=e,o="";switch(t){case ee.NUMERIC_FAULT:{o="NUMERIC_FAULT";let t=e;switch(t){case"overflow":case"underflow":case"division-by-zero":o+="-"+t;break;case"negative-power":case"negative-width":o+="-unsupported";break;case"unbound-bitwise-result":o+="-unbound-result"}break}case ee.CALL_EXCEPTION:case ee.INSUFFICIENT_FUNDS:case ee.MISSING_NEW:case ee.NONCE_EXPIRED:case ee.REPLACEMENT_UNDERPRICED:case ee.TRANSACTION_REPLACED:case ee.UNPREDICTABLE_GAS_LIMIT:o=t}o&&(e+=" [ See: https://links.ethers.org/v5-errors-"+o+" ]"),n.length&&(e+=" ("+n.join(", ")+")");let a=Error(e);return a.reason=i,a.code=t,Object.keys(r).forEach(function(e){a[e]=r[e]}),a}throwError(e,t,r){throw this.makeError(e,t,r)}throwArgumentError(e,t,r){return this.throwError(e,Logger$1.errors.INVALID_ARGUMENT,{argument:t,value:r})}assert(e,t,r,n){e||this.throwError(t,r,n)}assertArgument(e,t,r,n){e||this.throwArgumentError(t,r,n)}checkNormalize(e){e_&&this.throwError("platform missing String.prototype.normalize",Logger$1.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:e_})}checkSafeUint53(e,t){"number"==typeof e&&(null==t&&(t="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(t,Logger$1.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(t,Logger$1.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))}checkArgumentCount(e,t,r){r=r?": "+r:"",e<t&&this.throwError("missing argument"+r,Logger$1.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError("too many arguments"+r,Logger$1.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t})}checkNew(e,t){(e===Object||null==e)&&this.throwError("missing new",Logger$1.errors.MISSING_NEW,{name:t.name})}checkAbstract(e,t){e===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",Logger$1.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):(e===Object||null==e)&&this.throwError("missing new",Logger$1.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return eh||(eh=new Logger$1("logger/5.7.0")),eh}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError("cannot permanently disable censorship",Logger$1.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),ec){if(!e)return;this.globalLogger().throwError("error censorship permanent",Logger$1.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}eu=!!e,ec=!!t}static setLogLevel(e){let t=ef[e.toLowerCase()];if(null==t){Logger$1.globalLogger().warn("invalid log level - "+e);return}eg=t}static from(e){return new Logger$1(e)}};Logger$1.errors=ee,Logger$1.levels=Z;var __awaiter=function(e,t,r,n){function adopt(e){return e instanceof r?e:new r(function(t){t(e)})}return new(r||(r=Promise))(function(r,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n.throw(e))}catch(e){i(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())})};let ev=new Logger$1("properties/5.7.0");function defineReadOnly(e,t,r){Object.defineProperty(e,t,{enumerable:!0,value:r,writable:!1})}function resolveProperties(e){return __awaiter(this,void 0,void 0,function*(){let t=Object.keys(e).map(t=>{let r=e[t];return Promise.resolve(r).then(e=>({key:t,value:e}))}),r=yield Promise.all(t);return r.reduce((e,t)=>(e[t.key]=t.value,e),{})})}let ep={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function _isFrozen(e){if(null==e||ep[typeof e])return!0;if(Array.isArray(e)||"object"==typeof e){if(!Object.isFrozen(e))return!1;let t=Object.keys(e);for(let r=0;r<t.length;r++){let n=null;try{n=e[t[r]]}catch(e){continue}if(!_isFrozen(n))return!1}return!0}return ev.throwArgumentError(`Cannot deepCopy ${typeof e}`,"object",e)}function _deepCopy(e){if(_isFrozen(e))return e;if(Array.isArray(e))return Object.freeze(e.map(e=>_deepCopy(e)));if("object"==typeof e){let t={};for(let r in e){let n=e[r];if(void 0!==n)defineReadOnly(t,r,_deepCopy(n))}return t}return ev.throwArgumentError(`Cannot deepCopy ${typeof e}`,"object",e)}function deepCopy(e){return _deepCopy(e)}function fromHex(e){return ei.O$.from(e).toNumber()}function toHex(e){return ei.O$.from(e).toHexString()}function formatBlock(e){return"string"==typeof e?e:Number.isInteger(e)?toHex(e):e.toString()}function stringToEnum(e,t){return Object.values(t).includes(e)?e:null}function getNftContractForNftFromRaw(e){return nullsToUndefined(Object.assign(Object.assign({},getNftContractFromRaw(e)),{spamClassifications:e.spamClassifications.map(parseNftSpamClassification)}))}function getNftContractsForOwnerFromRaw(e){return nullsToUndefined(Object.assign(Object.assign({},getNftContractFromRaw(e)),{displayNft:e.displayNft,image:e.image,totalBalance:e.totalBalance,numDistinctTokensOwned:e.numDistinctTokensOwned,isSpam:e.isSpam}))}function getNftContractFromRaw(e){return nullsToUndefined(Object.assign(Object.assign({},e),{tokenType:parseNftTokenType(e.tokenType),openSeaMetadata:Object.assign(Object.assign({},e.openSeaMetadata),{safelistRequestStatus:null!==e.openSeaMetadata.safelistRequestStatus?stringToEnum(e.openSeaMetadata.safelistRequestStatus,F):null})}))}function getNftCollectionFromRaw(e){return nullsToUndefined(Object.assign(Object.assign({},e),{floorPrice:Object.assign(Object.assign({},e.floorPrice),{marketplace:parseNftCollectionMarketplace(e.floorPrice.marketplace)})}))}function getBaseNftFromRaw(e,t){return{contractAddress:t||e.contractAddress,tokenId:e.tokenId}}function getNftFromRaw(e){return nullsToUndefined(Object.assign(Object.assign({},e),{contract:getNftContractForNftFromRaw(e.contract),tokenType:parseNftTokenType(e.tokenType),acquiredAt:e.acquiredAt,collection:e.collection,mint:e.mint}))}function getNftSalesFromRaw(e){return nullsToUndefined({nftSales:e.nftSales.map(e=>Object.assign(Object.assign({},e),{marketplace:parseNftSaleMarketplace(e.marketplace),taker:parseNftTaker(e.taker)})),validAt:e.validAt,pageKey:e.pageKey})}function parseNftSaleMarketplace(e){switch(e){case"looksrare":return V.LOOKSRARE;case"seaport":return V.SEAPORT;case"x2y2":return V.X2Y2;case"wyvern":return V.WYVERN;case"cryptopunks":return V.CRYPTOPUNKS;case"blur":return V.BLUR;default:return V.UNKNOWN}}function parseNftCollectionMarketplace(e){if("OpenSea"===e)return X.OPENSEA}function parseNftTaker(e){switch(e.toLowerCase()){case"buyer":return Y.BUYER;case"seller":return Y.SELLER;default:throw Error(`Unsupported NftSaleTakerType ${e}`)}}function parseNftSpamClassification(e){let t=stringToEnum(e,K);return null==t?K.Unknown:t}function parseNftTokenType(e){switch(e){case"erc721":case"ERC721":return x.ERC721;case"erc1155":case"ERC1155":return x.ERC1155;case"no_supported_nft_standard":case"NO_SUPPORTED_NFT_STANDARD":return x.NO_SUPPORTED_NFT_STANDARD;case"not_a_contract":case"NOT_A_CONTRACT":return x.NOT_A_CONTRACT;default:return x.UNKNOWN}}let ey="undefined"!=typeof window&&null!==window;function nullsToUndefined(e){if(null!=e){if("Object"===e.constructor.name||Array.isArray(e))for(let t in e)e[t]=nullsToUndefined(e[t]);return e}}function getAssetTransfers(e,t,r="getAssetTransfers"){return __awaiter$1(this,void 0,void 0,function*(){let n=yield e.getProvider();return t.fromAddress&&(t.fromAddress=yield n._getAddress(t.fromAddress)),t.toAddress&&(t.toAddress=yield n._getAddress(t.toAddress)),n._send("alchemy_getAssetTransfers",[Object.assign(Object.assign({},t),{fromBlock:null!=t.fromBlock?formatBlock(t.fromBlock):void 0,toBlock:null!=t.toBlock?formatBlock(t.toBlock):void 0,maxCount:null!=t.maxCount?toHex(t.maxCount):void 0})],r)})}function getTransactionReceipts(e,t,r="getTransactionReceipts"){return __awaiter$1(this,void 0,void 0,function*(){let n=yield e.getProvider();return n._send("alchemy_getTransactionReceipts",[t],r)})}function getLogs(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield e.getProvider();yield r.getNetwork();let n=yield resolveProperties({filter:getFilter(e,t)}),i=yield r.send("eth_getLogs",[n.filter]);return i.forEach(e=>{null==e.removed&&(e.removed=!1)}),arrayOf(r.formatter.filterLog.bind(r.formatter))(i)})}function getFilter(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield e.getProvider(),n=yield t,i={};return["blockHash","topics"].forEach(e=>{null!=n[e]&&(i[e]=n[e])}),["fromBlock","toBlock"].forEach(e=>{null!=n[e]&&(i[e]=r._getBlockTag(n[e]))}),i=r.formatter.filter((yield resolveProperties(i))),Array.isArray(n.address)?i.address=yield Promise.all(n.address.map(e=>__awaiter$1(this,void 0,void 0,function*(){return r._getAddress(e)}))):null!=n.address&&(i.address=yield r._getAddress(n.address)),i})}function arrayOf(e){return function(t){if(!Array.isArray(t))throw Error("not an array");let r=[];return t.forEach(t=>{r.push(e(t))}),r}}let CoreNamespace=class CoreNamespace{constructor(e){this.config=e}getBalance(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider();return r.getBalance(e,t)})}isContractAddress(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider(),r=yield t.getCode(e);return"0x"!==r})}getCode(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider();return r.getCode(e,t)})}getStorageAt(e,t,r){return __awaiter$1(this,void 0,void 0,function*(){let n=yield this.config.getProvider();return n.getStorageAt(e,t,r)})}getTransactionCount(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider();return r.getTransactionCount(e,t)})}getBlock(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.getBlock(e)})}getBlockWithTransactions(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.getBlockWithTransactions(e)})}getNetwork(){return __awaiter$1(this,void 0,void 0,function*(){let e=yield this.config.getProvider();return e.getNetwork()})}getBlockNumber(){return __awaiter$1(this,void 0,void 0,function*(){let e=yield this.config.getProvider();return e.getBlockNumber()})}getGasPrice(){return __awaiter$1(this,void 0,void 0,function*(){let e=yield this.config.getProvider();return e.getGasPrice()})}getFeeData(){return __awaiter$1(this,void 0,void 0,function*(){let e=yield this.config.getProvider();return e.getFeeData()})}ready(){return __awaiter$1(this,void 0,void 0,function*(){let e=yield this.config.getProvider();return e.ready})}call(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider();return r.call(e,t)})}estimateGas(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.estimateGas(e)})}getTransaction(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.getTransaction(e)})}getTransactionReceipt(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.getTransactionReceipt(e)})}sendTransaction(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.sendTransaction(e)})}waitForTransaction(e,t,r){return __awaiter$1(this,void 0,void 0,function*(){let n=yield this.config.getProvider();return n.waitForTransaction(e,t,r)})}getLogs(e){return __awaiter$1(this,void 0,void 0,function*(){return getLogs(this.config,e)})}send(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider();return r.send(e,t)})}findContractDeployer(e){var t;return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider(),n=yield r.getBlockNumber();if((yield r.getCode(e,n))==="0x")throw Error(`Contract '${e}' does not exist`);let i=yield binarySearchFirstBlock(0,n+1,e,this.config),o=yield getTransactionReceipts(this.config,{blockNumber:toHex(i)},"findContractDeployer"),a=null===(t=o.receipts)||void 0===t?void 0:t.find(t=>t.contractAddress===e.toLowerCase());return{deployerAddress:null==a?void 0:a.from,blockNumber:i}})}getTokenBalances(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider(),n=yield r._getAddress(e);if(Array.isArray(t)){if(t.length>1500)throw Error("You cannot pass in more than 1500 contract addresses to getTokenBalances()");if(0===t.length)throw Error("getTokenBalances() requires at least one contractAddress when using an array");return r._send("alchemy_getTokenBalances",[n,t],"getTokenBalances")}{let e=void 0===t?I.ERC20:t.type,i=[n,e];return(null==t?void 0:t.type)===I.ERC20&&t.pageKey&&i.push({pageKey:t.pageKey}),r._send("alchemy_getTokenBalances",i,"getTokenBalances")}})}getTokensForOwner(e,t){var r;return __awaiter$1(this,void 0,void 0,function*(){let n=yield this.config.getProvider(),i=yield n._getAddress(e),o=[i,null!==(r=null==t?void 0:t.contractAddresses)&&void 0!==r?r:I.ERC20];(null==t?void 0:t.pageKey)&&o.push({pageKey:t.pageKey});let a=yield n._send("alchemy_getTokenBalances",o,"getTokensForOwner"),s=a.tokenBalances.map(e=>({contractAddress:e.contractAddress,rawBalance:ei.O$.from(e.tokenBalance).toString()})),l=yield Promise.allSettled(a.tokenBalances.map(e=>n._send("alchemy_getTokenMetadata",[e.contractAddress],"getTokensForOwner",!0))),d=l.map(e=>"fulfilled"===e.status?e.value:{name:null,symbol:null,decimals:null,logo:null}),c=s.map((e,t)=>Object.assign(Object.assign(Object.assign({},e),d[t]),{balance:null!==d[t].decimals?(0,er.bM)(e.rawBalance,d[t].decimals):void 0}));return{tokens:c.map(e=>nullsToUndefined(e)),pageKey:a.pageKey}})}getTokenMetadata(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t._send("alchemy_getTokenMetadata",[e],"getTokenMetadata")})}getAssetTransfers(e){return __awaiter$1(this,void 0,void 0,function*(){return getAssetTransfers(this.config,e)})}getTransactionReceipts(e){return __awaiter$1(this,void 0,void 0,function*(){return getTransactionReceipts(this.config,e)})}resolveName(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.resolveName(e)})}lookupAddress(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.lookupAddress(e)})}};function binarySearchFirstBlock(e,t,r,n){return __awaiter$1(this,void 0,void 0,function*(){if(e>=t)return t;let i=Math.floor((e+t)/2),o=yield n.getProvider(),a=yield o.getCode(r,i);return"0x"===a?binarySearchFirstBlock(i+1,t,r,n):binarySearchFirstBlock(e,i,r,n)})}let DebugNamespace=class DebugNamespace{constructor(e){this.config=e}traceCall(e,t,r){return __awaiter$1(this,void 0,void 0,function*(){let n=yield this.config.getProvider(),i=[e,t,parseTracerParams(r)];return n._send("debug_traceCall",i,"traceCall")})}traceTransaction(e,t,r){return __awaiter$1(this,void 0,void 0,function*(){let n=yield this.config.getProvider(),i=[e,parseTracerParams(t,r)];return n._send("debug_traceTransaction",i,"traceTransaction")})}traceBlock(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r,n;let i=yield this.config.getProvider();if((0,en.A7)(e,32))r="debug_traceBlockByHash",n=[e,parseTracerParams(t)];else{r="debug_traceBlockByNumber";let i="number"==typeof e?(0,en.Ou)((0,en.$P)(e)):e;n=[i,parseTracerParams(t)]}return i._send(r,n,"traceBlock")})}};function parseTracerParams(e,t){return Object.assign({tracer:e.type},void 0!==e.onlyTopCall&&{tracerConfig:{onlyTopCall:e.onlyTopCall,timeout:t}})}function sanitizeTokenType(e){if(e===x.ERC1155||e===x.ERC721)return e}(k=et||(et={}))[k.DEBUG=0]="DEBUG",k[k.INFO=1]="INFO",k[k.WARN=2]="WARN",k[k.ERROR=3]="ERROR",k[k.SILENT=4]="SILENT",et.DEBUG,et.INFO,et.WARN,et.ERROR,et.SILENT;let eE={[et.DEBUG]:"log",[et.INFO]:"info",[et.WARN]:"warn",[et.ERROR]:"error"},eT=et.INFO;function logDebug(e,...t){eN.debug(e,t)}function logInfo(e,...t){eN.info(e,t)}function logWarn(e,...t){eN.warn(e,t)}let Logger=class Logger{constructor(){this._logLevel=eT}get logLevel(){return this._logLevel}set logLevel(e){if(!(e in et))throw TypeError(`Invalid value "${e}" assigned to \`logLevel\``);this._logLevel=e}debug(...e){this._log(et.DEBUG,...e)}info(...e){this._log(et.INFO,...e)}warn(...e){this._log(et.WARN,...e)}error(...e){this._log(et.ERROR,...e)}_log(e,...t){if(e<this._logLevel)return;let r=new Date().toISOString(),n=eE[e];if(n)console[n](`[${r}] Alchemy:`,...t.map(stringify));else throw Error(`Logger received an invalid logLevel (value: ${e})`)}};function stringify(e){if("string"==typeof e)return e;try{return JSON.stringify(e)}catch(t){return e}}let eN=new Logger,eA="3.2.1";function sendAxiosRequest(e,t,r,n,i){var o;let a=Object.assign(Object.assign({},i),{headers:Object.assign(Object.assign(Object.assign({},null==i?void 0:i.headers),!ey&&{"Accept-Encoding":"gzip"}),{"Alchemy-Ethers-Sdk-Version":eA,"Alchemy-Ethers-Sdk-Method":r}),method:null!==(o=null==i?void 0:i.method)&&void 0!==o?o:"GET",url:e+"/"+t,params:n});return(0,eo.Z)(a)}let ExponentialBackoff=class ExponentialBackoff{constructor(e=5){this.maxAttempts=e,this.initialDelayMs=1e3,this.backoffMultiplier=1.5,this.maxDelayMs=3e4,this.numAttempts=0,this.currentDelayMs=0,this.isInBackoff=!1}backoff(){if(this.numAttempts>=this.maxAttempts)return Promise.reject(Error(`Exceeded maximum number of attempts: ${this.maxAttempts}`));if(this.isInBackoff)return Promise.reject(Error("A backoff operation is already in progress"));let e=this.withJitterMs(this.currentDelayMs);return e>0&&logDebug("ExponentialBackoff.backoff",`Backing off for ${e}ms`),this.currentDelayMs*=this.backoffMultiplier,this.currentDelayMs=Math.max(this.currentDelayMs,this.initialDelayMs),this.currentDelayMs=Math.min(this.currentDelayMs,this.maxDelayMs),this.numAttempts+=1,new Promise(t=>{this.isInBackoff=!0,setTimeout(()=>{this.isInBackoff=!1,t()},e)})}withJitterMs(e){return Math.min(e+(Math.random()-.5)*e,this.maxDelayMs)}};function requestHttpWithBackoff(e,t,r,n,i,o){return __awaiter$1(this,void 0,void 0,function*(){let a;let s=new ExponentialBackoff(e.maxRetries);for(let l=0;l<e.maxRetries+1;l++)try{void 0!==a&&logInfo("requestHttp",`Retrying after error: ${a.message}`);try{yield s.backoff()}catch(e){break}let l=yield sendAxiosRequest(e._getRequestUrl(t),r,n,i,Object.assign(Object.assign({},o),{timeout:e.requestTimeout}));if(200===l.status)return logDebug(r,`Successful request: ${r}`),l.data;logInfo(r,`Request failed: ${r}, ${l.status}, ${l.data}`),a=Error(l.status+": "+l.data)}catch(e){if(!eo.Z.isAxiosError(e)||void 0===e.response)throw e;if(a=Error(e.response.status+": "+JSON.stringify(e.response.data)),!isRetryableHttpError(e,t))break}return Promise.reject(a)})}function isRetryableHttpError(e,t){let r=t===J.WEBHOOK?[429,500]:[429];return void 0!==e.response&&r.includes(e.response.status)}function paginateEndpoint(e,t,r,n,i,o,a){return __asyncGenerator(this,arguments,function*(){let s=!0,l=Object.assign({},a);for(;s;){let a=yield __await(requestHttpWithBackoff(e,t,r,n,l));yield yield __await(a),null!==a[o]?l[i]=a[o]:s=!1}})}function getNftMetadata(e,t,r,n,i="getNftMetadata"){return __awaiter$1(this,void 0,void 0,function*(){let o=yield requestHttpWithBackoff(e,J.NFT,"getNFTMetadata",i,{contractAddress:t,tokenId:ei.O$.from(r).toString(),tokenType:sanitizeTokenType(null==n?void 0:n.tokenType),tokenUriTimeoutInMs:null==n?void 0:n.tokenUriTimeoutInMs,refreshCache:null==n?void 0:n.refreshCache});return getNftFromRaw(o)})}function getNftMetadataBatch(e,t,r){return __awaiter$1(this,void 0,void 0,function*(){let n={tokens:t,tokenUriTimeoutInMs:null==r?void 0:r.tokenUriTimeoutInMs,refreshCache:null==r?void 0:r.refreshCache},i=yield requestHttpWithBackoff(e,J.NFT,"getNFTMetadataBatch","getNftMetadataBatch",{},{method:"POST",data:n});return{nfts:i.nfts.map(e=>getNftFromRaw(e))}})}function getContractMetadata(e,t,r="getContractMetadata"){return __awaiter$1(this,void 0,void 0,function*(){let n=yield requestHttpWithBackoff(e,J.NFT,"getContractMetadata",r,{contractAddress:t});return getNftContractFromRaw(n)})}function getContractMetadataBatch(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield requestHttpWithBackoff(e,J.NFT,"getContractMetadataBatch","getContractMetadataBatch",{},{method:"POST",data:{contractAddresses:t}});return{contracts:r.contracts.map(getNftContractFromRaw)}})}function getCollectionMetadata(e,t,r="getCollectionMetadata"){return __awaiter$1(this,void 0,void 0,function*(){let n=yield requestHttpWithBackoff(e,J.NFT,"getCollectionMetadata",r,{collectionSlug:t});return getNftCollectionFromRaw(n)})}function getNftsForOwnerIterator(e,t,r,n="getNftsForOwnerIterator"){return __asyncGenerator(this,arguments,function*(){var i,o;let a=omitMetadataToWithMetadata(null==r?void 0:r.omitMetadata);try{for(var s,l=__asyncValues(paginateEndpoint(e,J.NFT,"getNFTsForOwner",n,"pageKey","pageKey",{contractAddresses:null==r?void 0:r.contractAddresses,pageKey:null==r?void 0:r.pageKey,excludeFilters:null==r?void 0:r.excludeFilters,includeFilters:null==r?void 0:r.includeFilters,owner:t,withMetadata:a,tokenUriTimeoutInMs:null==r?void 0:r.tokenUriTimeoutInMs,orderBy:null==r?void 0:r.orderBy}));!(s=yield __await(l.next())).done;){let e=s.value;for(let t of e.ownedNfts)yield yield __await(Object.assign(Object.assign({},nftFromGetNftResponse(t)),{balance:t.balance}))}}catch(e){i={error:e}}finally{try{s&&!s.done&&(o=l.return)&&(yield __await(o.call(l)))}finally{if(i)throw i.error}}})}function getNftsForOwner(e,t,r,n="getNftsForOwner"){return __awaiter$1(this,void 0,void 0,function*(){let i=omitMetadataToWithMetadata(null==r?void 0:r.omitMetadata),o=yield requestHttpWithBackoff(e,J.NFT,"getNFTsForOwner",n,{contractAddresses:null==r?void 0:r.contractAddresses,pageKey:null==r?void 0:r.pageKey,excludeFilters:null==r?void 0:r.excludeFilters,includeFilters:null==r?void 0:r.includeFilters,owner:t,pageSize:null==r?void 0:r.pageSize,withMetadata:i,tokenUriTimeoutInMs:null==r?void 0:r.tokenUriTimeoutInMs,orderBy:null==r?void 0:r.orderBy});return i?nullsToUndefined({ownedNfts:o.ownedNfts.map(e=>Object.assign(Object.assign({},getNftFromRaw(e)),{balance:e.balance})),pageKey:o.pageKey,totalCount:o.totalCount,validAt:o.validAt}):nullsToUndefined({ownedNfts:o.ownedNfts.map(e=>Object.assign(Object.assign({},getBaseNftFromRaw(e)),{balance:e.balance})),pageKey:o.pageKey,totalCount:o.totalCount,validAt:o.validAt})})}function getNftsForContract(e,t,r,n="getNftsForContract"){var i;return __awaiter$1(this,void 0,void 0,function*(){let o=omitMetadataToWithMetadata(null==r?void 0:r.omitMetadata),a=yield requestHttpWithBackoff(e,J.NFT,"getNFTsForContract",n,{contractAddress:t,pageKey:null==r?void 0:r.pageKey,withMetadata:o,limit:null!==(i=null==r?void 0:r.pageSize)&&void 0!==i?i:void 0,tokenUriTimeoutInMs:null==r?void 0:r.tokenUriTimeoutInMs});return o?nullsToUndefined({nfts:a.nfts.map(e=>getNftFromRaw(e)),pageKey:a.pageKey}):nullsToUndefined({nfts:a.nfts.map(e=>getBaseNftFromRaw(e,t)),pageKey:a.pageKey})})}function getNftsForContractIterator(e,t,r,n="getNftsForContractIterator"){return __asyncGenerator(this,arguments,function*(){var i,o;let a=omitMetadataToWithMetadata(null==r?void 0:r.omitMetadata);try{for(var s,l=__asyncValues(paginateEndpoint(e,J.NFT,"getNFTsForContract",n,"pageKey","pageKey",{contractAddress:t,pageKey:null==r?void 0:r.pageKey,withMetadata:a}));!(s=yield __await(l.next())).done;){let e=s.value;for(let r of e.nfts)yield yield __await(nftFromGetNftContractResponse(r,t))}}catch(e){i={error:e}}finally{try{s&&!s.done&&(o=l.return)&&(yield __await(o.call(l)))}finally{if(i)throw i.error}}})}function getOwnersForContract(e,t,r,n="getOwnersForContract"){return __awaiter$1(this,void 0,void 0,function*(){let i=yield requestHttpWithBackoff(e,J.NFT,"getOwnersForContract",n,Object.assign(Object.assign({},r),{contractAddress:t}));return null==r||r.withTokenBalances,nullsToUndefined({owners:i.owners,pageKey:i.pageKey})})}function getContractsForOwner(e,t,r,n="getContractsForOwner"){return __awaiter$1(this,void 0,void 0,function*(){let i=yield requestHttpWithBackoff(e,J.NFT,"getContractsForOwner",n,{owner:t,excludeFilters:null==r?void 0:r.excludeFilters,includeFilters:null==r?void 0:r.includeFilters,pageKey:null==r?void 0:r.pageKey,pageSize:null==r?void 0:r.pageSize,orderBy:null==r?void 0:r.orderBy});return nullsToUndefined({contracts:i.contracts.map(getNftContractsForOwnerFromRaw),pageKey:i.pageKey,totalCount:i.totalCount})})}function getOwnersForNft(e,t,r,n,i="getOwnersForNft"){return __awaiter$1(this,void 0,void 0,function*(){return requestHttpWithBackoff(e,J.NFT,"getOwnersForNFT",i,Object.assign({contractAddress:t,tokenId:ei.O$.from(r).toString()},n))})}function getMintedNfts(e,t,r){return __awaiter$1(this,void 0,void 0,function*(){let n=yield e.getProvider(),i=yield n._getAddress(t),o=nftTokenTypeToCategory(null==r?void 0:r.tokenType),a={fromBlock:"0x0",fromAddress:"0x0000000000000000000000000000000000000000",toAddress:i,excludeZeroValue:!0,contractAddresses:null==r?void 0:r.contractAddresses,category:o,maxCount:100,pageKey:null==r?void 0:r.pageKey},s=yield getAssetTransfers(e,a,"getMintedNfts");return getNftsForTransfers(e,s)})}function getTransfersForOwner(e,t,r,n){return __awaiter$1(this,void 0,void 0,function*(){let i=yield e.getProvider(),o=yield i._getAddress(t),a=nftTokenTypeToCategory(null==n?void 0:n.tokenType),s={fromBlock:"0x0",excludeZeroValue:!0,contractAddresses:null==n?void 0:n.contractAddresses,category:a,maxCount:100,pageKey:null==n?void 0:n.pageKey};r===P.TO?s.toAddress=o:s.fromAddress=o;let l=yield getAssetTransfers(e,s,"getTransfersForOwner");return getNftsForTransfers(e,l)})}function getTransfersForContract(e,t,r){return __awaiter$1(this,void 0,void 0,function*(){let n=[b.ERC721,b.ERC1155,b.SPECIALNFT],i=yield e.getProvider(),o=(null==r?void 0:r.fromBlock)?i.formatter.blockTag((yield i._getBlockTag(r.fromBlock))):"0x0",a=(null==r?void 0:r.toBlock)?i.formatter.blockTag((yield i._getBlockTag(r.toBlock))):void 0,s={fromBlock:o,toBlock:a,excludeZeroValue:!0,contractAddresses:[t],order:null==r?void 0:r.order,category:n,maxCount:100,pageKey:null==r?void 0:r.pageKey},l=yield getAssetTransfers(e,s,"getTransfersForContract");return getNftsForTransfers(e,l)})}function nftTokenTypeToCategory(e){switch(e){case x.ERC721:return[b.ERC721];case x.ERC1155:return[b.ERC1155];default:return[b.ERC721,b.ERC1155,b.SPECIALNFT]}}function parse1155Transfer(e){return e.erc1155Metadata.map(t=>({contractAddress:e.rawContract.address,tokenId:t.tokenId,tokenType:x.ERC1155}))}function verifyNftOwnership(e,t,r,n="verifyNftOwnership"){return __awaiter$1(this,void 0,void 0,function*(){if("string"==typeof r){let i=yield getNftsForOwner(e,t,{contractAddresses:[r],omitMetadata:!0},n);return i.ownedNfts.length>0}{if(0===r.length)throw Error("Must provide at least one contract address");let i=yield getNftsForOwner(e,t,{contractAddresses:r,omitMetadata:!0},n),o=r.reduce((e,t)=>(e[t]=!1,e),{});for(let e of i.ownedNfts)o[e.contractAddress]=!0;return o}})}function isSpamContract(e,t,r="isSpamContract"){return __awaiter$1(this,void 0,void 0,function*(){return requestHttpWithBackoff(e,J.NFT,"isSpamContract",r,{contractAddress:t})})}function getSpamContracts(e,t="getSpamContracts"){return __awaiter$1(this,void 0,void 0,function*(){return requestHttpWithBackoff(e,J.NFT,"getSpamContracts",t,void 0)})}function reportSpam(e,t,r="reportSpam"){return __awaiter$1(this,void 0,void 0,function*(){requestHttpWithBackoff(e,J.NFT,"reportSpam",r,{contractAddress:t})})}function isAirdropNft(e,t,r,n="isAirdropNft"){return __awaiter$1(this,void 0,void 0,function*(){return requestHttpWithBackoff(e,J.NFT,"isAirdropNFT",n,{contractAddress:t,tokenId:r})})}function getFloorPrice(e,t,r="getFloorPrice"){return __awaiter$1(this,void 0,void 0,function*(){let n=yield requestHttpWithBackoff(e,J.NFT,"getFloorPrice",r,{contractAddress:t});return nullsToUndefined(n)})}function getNftSales(e,t={},r="getNftSales"){return __awaiter$1(this,void 0,void 0,function*(){let n=Object.assign({},t),i=yield requestHttpWithBackoff(e,J.NFT,"getNFTSales",r,{fromBlock:null==n?void 0:n.fromBlock,toBlock:null==n?void 0:n.toBlock,order:null==n?void 0:n.order,marketplace:null==n?void 0:n.marketplace,contractAddress:null==n?void 0:n.contractAddress,tokenId:(null==n?void 0:n.tokenId)?ei.O$.from(null==n?void 0:n.tokenId).toString():void 0,sellerAddress:null==n?void 0:n.sellerAddress,buyerAddress:null==n?void 0:n.buyerAddress,taker:null==n?void 0:n.taker,limit:null==n?void 0:n.limit,pageKey:null==n?void 0:n.pageKey});return getNftSalesFromRaw(i)})}function computeRarity(e,t,r,n="computeRarity"){return __awaiter$1(this,void 0,void 0,function*(){let i=yield requestHttpWithBackoff(e,J.NFT,"computeRarity",n,{contractAddress:t,tokenId:ei.O$.from(r).toString()});return nullsToUndefined(i)})}function searchContractMetadata(e,t,r="searchContractMetadata"){return __awaiter$1(this,void 0,void 0,function*(){let n=yield requestHttpWithBackoff(e,J.NFT,"searchContractMetadata",r,{query:t});return{contracts:n.contracts.map(getNftContractFromRaw)}})}function summarizeNftAttributes(e,t,r="summarizeNftAttributes"){return __awaiter$1(this,void 0,void 0,function*(){return requestHttpWithBackoff(e,J.NFT,"summarizeNFTAttributes",r,{contractAddress:t})})}function refreshNftMetadata(e,t,r,n="refreshNftMetadata"){return __awaiter$1(this,void 0,void 0,function*(){let i=ei.O$.from(r).toString(),o=yield getNftMetadata(e,t,i,void 0,n),a=yield refresh(e,t,i,n);return o.timeLastUpdated!==a.timeLastUpdated})}function refreshContract(e,t,r="refreshContract"){return __awaiter$1(this,void 0,void 0,function*(){let n=yield requestHttpWithBackoff(e,J.NFT,"reingestContract",r,{contractAddress:t});return{contractAddress:n.contractAddress,refreshState:parseReingestionState(n.reingestionState),progress:n.progress}})}function refresh(e,t,r,n){return __awaiter$1(this,void 0,void 0,function*(){let i=yield requestHttpWithBackoff(e,J.NFT,"getNFTMetadata",n,{contractAddress:t,tokenId:ei.O$.from(r).toString(),refreshCache:!0});return getNftFromRaw(i)})}function nftFromGetNftResponse(e){return isNftWithMetadata(e)?getNftFromRaw(e):getBaseNftFromRaw(e)}function nftFromGetNftContractResponse(e,t){return isNftWithMetadata(e)?getNftFromRaw(e):getBaseNftFromRaw(e,t)}function isNftWithMetadata(e){return void 0!==e.name}function getNftsForTransfers(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=t.transfers.filter(e=>null!==e.rawContract.address).flatMap(e=>{var t;let r=getTokensFromTransfer(e),n={from:e.from,to:null!==(t=e.to)&&void 0!==t?t:void 0,transactionHash:e.hash,blockNumber:e.blockNum};return r.map(e=>({metadata:n,token:e}))});if(0===r.length)return{nfts:[]};let n=[];for(let e=0;e<r.length;e+=100)n.push(r.slice(e,e+100));let i=yield Promise.all(n.map(t=>getNftMetadataBatch(e,t.map(e=>e.token)))),o=i.map(e=>e.nfts).flat(),a=new Map;o.forEach(e=>{let t=`${e.contract.address.toLowerCase()}-${ei.O$.from(e.tokenId).toString()}`;a.set(t,e)});let s=r.map(e=>{let t=`${e.token.contractAddress.toLowerCase()}-${ei.O$.from(e.token.tokenId).toString()}`;return Object.assign(Object.assign({},a.get(t)),e.metadata)});return{nfts:s,pageKey:t.pageKey}})}function getTokensFromTransfer(e){return e.category===b.ERC1155?parse1155Transfer(e):[{contractAddress:e.rawContract.address,tokenId:e.tokenId,tokenType:e.category===b.ERC721?x.ERC721:void 0}]}function omitMetadataToWithMetadata(e){return void 0===e||!e}function parseReingestionState(e){switch(e){case"does_not_exist":return Q.DOES_NOT_EXIST;case"already_queued":return Q.ALREADY_QUEUED;case"in_progress":return Q.IN_PROGRESS;case"finished":return Q.FINISHED;case"queued":return Q.QUEUED;case"queue_failed":return Q.QUEUE_FAILED;default:throw Error("Unknown reingestion state: "+e)}}let NftNamespace=class NftNamespace{constructor(e){this.config=e}getNftMetadata(e,t,r,n){let i;return i="object"==typeof r?{tokenType:r.tokenType,tokenUriTimeoutInMs:r.tokenUriTimeoutInMs,refreshCache:r.refreshCache}:{tokenType:r,tokenUriTimeoutInMs:n},getNftMetadata(this.config,e,t,i)}getNftMetadataBatch(e,t){return getNftMetadataBatch(this.config,e,t)}getContractMetadata(e){return getContractMetadata(this.config,e)}getContractMetadataBatch(e){return getContractMetadataBatch(this.config,e)}getCollectionMetadata(e){return getCollectionMetadata(this.config,e)}getNftsForOwnerIterator(e,t){return getNftsForOwnerIterator(this.config,e,t)}getNftsForOwner(e,t){return getNftsForOwner(this.config,e,t)}getNftsForContract(e,t){return getNftsForContract(this.config,e,t)}getNftsForContractIterator(e,t){return getNftsForContractIterator(this.config,e,t)}getOwnersForContract(e,t){return getOwnersForContract(this.config,e,t)}getOwnersForNft(e,t,r){return getOwnersForNft(this.config,e,t,r)}getContractsForOwner(e,t){return getContractsForOwner(this.config,e,t)}getTransfersForOwner(e,t,r){return getTransfersForOwner(this.config,e,t,r)}getTransfersForContract(e,t){return getTransfersForContract(this.config,e,t)}getMintedNfts(e,t){return __awaiter$1(this,void 0,void 0,function*(){return getMintedNfts(this.config,e,t)})}verifyNftOwnership(e,t){return verifyNftOwnership(this.config,e,t)}isSpamContract(e){return isSpamContract(this.config,e)}getSpamContracts(){return getSpamContracts(this.config)}reportSpam(e){return reportSpam(this.config,e)}isAirdropNft(e,t){return isAirdropNft(this.config,e,t)}getFloorPrice(e){return getFloorPrice(this.config,e)}getNftSales(e){return getNftSales(this.config,e)}computeRarity(e,t){return computeRarity(this.config,e,t)}searchContractMetadata(e){return searchContractMetadata(this.config,e)}summarizeNftAttributes(e){return summarizeNftAttributes(this.config,e)}refreshNftMetadata(e,t){return refreshNftMetadata(this.config,e,t)}refreshContract(e){return refreshContract(this.config,e)}};let NotifyNamespace=class NotifyNamespace{constructor(e){this.config=e}getAllWebhooks(){return __awaiter$1(this,void 0,void 0,function*(){this.verifyConfig();let e=yield this.sendWebhookRequest("team-webhooks","getAllWebhooks",{});return{webhooks:parseRawWebhookResponse(e),totalCount:e.data.length}})}getAddresses(e,t){return __awaiter$1(this,void 0,void 0,function*(){this.verifyConfig();let r="string"==typeof e?e:e.id,n=yield this.sendWebhookRequest("webhook-addresses","getAddresses",{webhook_id:r,limit:null==t?void 0:t.limit,after:null==t?void 0:t.pageKey});return parseRawAddressActivityResponse(n)})}getGraphqlQuery(e){return __awaiter$1(this,void 0,void 0,function*(){this.verifyConfig();let t="string"==typeof e?e:e.id,r=yield this.sendWebhookRequest("dashboard-webhook-graphql-query","getGraphqlQuery",{webhook_id:t});return parseRawCustomGraphqlWebhookResponse(r)})}getNftFilters(e,t){return __awaiter$1(this,void 0,void 0,function*(){this.verifyConfig();let r="string"==typeof e?e:e.id,n=yield this.sendWebhookRequest("webhook-nft-filters","getNftFilters",{webhook_id:r,limit:null==t?void 0:t.limit,after:null==t?void 0:t.pageKey});return parseRawNftFiltersResponse(n)})}updateWebhook(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r,n,i,o;let a="string"==typeof e?e:e.id;if("isActive"in t)r="update-webhook",n="updateWebhook",i="PUT",o={webhook_id:a,is_active:t.isActive};else if("addFilters"in t||"removeFilters"in t)r="update-webhook-nft-filters",n="updateWebhookNftFilters",i="PATCH",o={webhook_id:a,nft_filters_to_add:t.addFilters?t.addFilters.map(nftFilterToParam):[],nft_filters_to_remove:t.removeFilters?t.removeFilters.map(nftFilterToParam):[]};else if("addMetadataFilters"in t||"removeMetadataFilters"in t)r="update-webhook-nft-metadata-filters",n="updateWebhookNftMetadataFilters",i="PATCH",o={webhook_id:a,nft_metadata_filters_to_add:t.addMetadataFilters?t.addMetadataFilters.map(nftFilterToParam):[],nft_metadata_filters_to_remove:t.removeMetadataFilters?t.removeMetadataFilters.map(nftFilterToParam):[]};else if("addAddresses"in t||"removeAddresses"in t)r="update-webhook-addresses",n="webhook:updateWebhookAddresses",i="PATCH",o={webhook_id:a,addresses_to_add:yield this.resolveAddresses(t.addAddresses),addresses_to_remove:yield this.resolveAddresses(t.removeAddresses)};else if("newAddresses"in t)r="update-webhook-addresses",n="webhook:updateWebhookAddress",i="PUT",o={webhook_id:a,addresses:yield this.resolveAddresses(t.newAddresses)};else throw Error("Invalid `update` param passed into `updateWebhook`");yield this.sendWebhookRequest(r,n,{},{method:i,data:o})})}createWebhook(e,t,r){return __awaiter$1(this,void 0,void 0,function*(){let n,i,o,a;if(t===G.MINED_TRANSACTION||t===G.DROPPED_TRANSACTION){if(!("appId"in r))throw Error("Transaction Webhooks require an app id.");n=r.appId}let s=eO.get(this.config.network);if(t===G.NFT_ACTIVITY||t===G.NFT_METADATA_UPDATE){if(!("filters"in r)||0===r.filters.length)throw Error("Nft Activity Webhooks require a non-empty array input.");s=r.network?eO.get(r.network):s;let e=r.filters.map(e=>e.tokenId?{contract_address:e.contractAddress,token_id:ei.O$.from(e.tokenId).toString()}:{contract_address:e.contractAddress});i=t===G.NFT_ACTIVITY?{nft_filters:e}:{nft_metadata_filters:e}}else if(t===G.ADDRESS_ACTIVITY){if(void 0===r||!("addresses"in r)||0===r.addresses.length)throw Error("Address Activity Webhooks require a non-empty array input.");s=r.network?eO.get(r.network):s,o=yield this.resolveAddresses(r.addresses)}else if(t==G.GRAPHQL){if(void 0===r||!("graphqlQuery"in r)||0===r.graphqlQuery.length)throw Error("Custom Webhooks require a non-empty graphql query.");s=r.network?eO.get(r.network):s,a=r.graphqlQuery}let l=Object.assign(Object.assign(Object.assign(Object.assign({network:s,webhook_type:t,webhook_url:e},n&&{app_id:n}),i),o&&{addresses:o}),a&&{graphql_query:a}),d=yield this.sendWebhookRequest("create-webhook","createWebhook",{},{method:"POST",data:l});return parseRawWebhook(d.data)})}deleteWebhook(e){return __awaiter$1(this,void 0,void 0,function*(){this.verifyConfig();let t="string"==typeof e?e:e.id,r=yield this.sendWebhookRequest("delete-webhook","deleteWebhook",{webhook_id:t},{method:"DELETE"});if("message"in r)throw Error(`Webhook not found. Failed to delete webhook: ${t}`)})}verifyConfig(){if(void 0===this.config.authToken)throw Error("Using the Notify API requires setting the Alchemy Auth Token in the settings object when initializing Alchemy.")}sendWebhookRequest(e,t,r,n){return requestHttpWithBackoff(this.config,J.WEBHOOK,e,t,r,Object.assign(Object.assign({},n),{headers:Object.assign({"X-Alchemy-Token":this.config.authToken},null==n?void 0:n.headers)}))}resolveAddresses(e){return __awaiter$1(this,void 0,void 0,function*(){if(void 0===e)return[];let t=[],r=yield this.config.getProvider();for(let n of e){let e=yield r.resolveName(n);if(null===e)throw Error(`Unable to resolve the ENS address: ${n}`);t.push(e)}return t})}};let ew={ETH_MAINNET:C.ETH_MAINNET,ETH_GOERLI:C.ETH_GOERLI,ETH_SEPOLIA:C.ETH_SEPOLIA,MATIC_MAINNET:C.MATIC_MAINNET,MATIC_MUMBAI:C.MATIC_MUMBAI,MATIC_AMOY:C.MATIC_AMOY,ARB_MAINNET:C.ARB_MAINNET,ARB_GOERLI:C.ARB_GOERLI,ARB_SEPOLIA:C.ARB_SEPOLIA,OPT_MAINNET:C.OPT_MAINNET,OPT_GOERLI:C.OPT_GOERLI,OPT_SEPOLIA:C.OPT_SEPOLIA,BASE_MAINNET:C.BASE_MAINNET,BASE_GOERLI:C.BASE_GOERLI,BASE_SEPOLIA:C.BASE_SEPOLIA},eO=Object.keys(C).reduce((e,t)=>(t in ew&&e.set(ew[t],t),e),new Map);function parseRawWebhookResponse(e){return e.data.map(parseRawWebhook)}function parseRawWebhook(e){return Object.assign({id:e.id,network:ew[e.network],type:e.webhook_type,url:e.webhook_url,isActive:e.is_active,timeCreated:new Date(e.time_created).toISOString(),signingKey:e.signing_key,version:e.version},void 0!==e.app_id&&{appId:e.app_id})}function parseRawAddressActivityResponse(e){return{addresses:e.data,totalCount:e.pagination.total_count,pageKey:e.pagination.cursors.after}}function parseRawCustomGraphqlWebhookResponse(e){return{graphqlQuery:e.data.graphql_query}}function parseRawNftFiltersResponse(e){return{filters:e.data.map(e=>e.token_id?{contractAddress:e.contract_address,tokenId:ei.O$.from(e.token_id).toString()}:{contractAddress:e.contract_address}),totalCount:e.pagination.total_count,pageKey:e.pagination.cursors.after}}function nftFilterToParam(e){return e.tokenId?{contract_address:e.contractAddress,token_id:ei.O$.from(e.tokenId).toString()}:{contract_address:e.contractAddress}}let eR=[.9,1,1.1,1.2,1.3];let TransactNamespace=class TransactNamespace{constructor(e){this.config=e}sendPrivateTransaction(e,t,r){return __awaiter$1(this,void 0,void 0,function*(){let n=yield this.config.getProvider(),i=t?toHex(t):void 0;return n._send("eth_sendPrivateTransaction",[{tx:e,maxBlockNumber:i,preferences:r}],"sendPrivateTransaction")})}cancelPrivateTransaction(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t._send("eth_cancelPrivateTransaction",[{txHash:e}],"cancelPrivateTransaction")})}simulateAssetChangesBundle(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider(),n=yield r._send("alchemy_simulateAssetChangesBundle",void 0!==t?[e,t]:[e],"simulateAssetChangesBundle");return nullsToUndefined(n)})}simulateAssetChanges(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider(),n=yield r._send("alchemy_simulateAssetChanges",void 0!==t?[e,t]:[e],"simulateAssetChanges");return nullsToUndefined(n)})}simulateExecutionBundle(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider(),n=r._send("alchemy_simulateExecutionBundle",void 0!==t?[e,t]:[e],"simulateExecutionBundle");return nullsToUndefined(n)})}simulateExecution(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider(),n=r._send("alchemy_simulateExecution",void 0!==t?[e,t]:[e],"simulateExecution");return nullsToUndefined(n)})}getTransaction(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.getTransaction(e)})}sendTransaction(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.sendTransaction(e)})}estimateGas(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t.estimateGas(e)})}getMaxPriorityFeePerGas(){return __awaiter$1(this,void 0,void 0,function*(){let e=yield this.config.getProvider(),t=yield e._send("eth_maxPriorityFeePerGas",[],"getMaxPriorityFeePerGas");return fromHex(t)})}waitForTransaction(e,t,r){return __awaiter$1(this,void 0,void 0,function*(){let n=yield this.config.getProvider();return n.waitForTransaction(e,t,r)})}sendGasOptimizedTransaction(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r,n,i;if(Array.isArray(e))return this._sendGasOptimizedTransaction(e,"sendGasOptimizedTransactionPreSigned");let o=yield this.config.getProvider();try{r=yield this.estimateGas(e),n=yield this.getMaxPriorityFeePerGas();let t=yield o.getBlock("latest");i=t.baseFeePerGas.toNumber()}catch(e){throw Error(`Failed to estimate gas for transaction: ${e}`)}let a=generateGasSpreadTransactions(e,r.toNumber(),i,n),s=yield Promise.all(a.map(e=>t.signTransaction(e)));return this._sendGasOptimizedTransaction(s,"sendGasOptimizedTransactionGenerated")})}getGasOptimizedTransactionStatus(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider();return t._send("alchemy_getGasOptimizedTransactionStatus",[e],"getGasOptimizedTransactionStatus")})}_sendGasOptimizedTransaction(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getProvider();return r._send("alchemy_sendGasOptimizedTransaction",[{rawTransactions:e}],t)})}};function generateGasSpreadTransactions(e,t,r,n){return eR.map(i=>Object.assign(Object.assign({},e),{gasLimit:t,maxFeePerGas:Math.round(r*i+n*i),maxPriorityFeePerGas:Math.round(i*n)}))}let ek="alchemy-pending-transactions",eC="alchemy-mined-transactions",eI=[ek,eC];let Event=class Event{constructor(e,t,r){this.listener=t,this.tag=e,this.once=r,this._lastBlockNumber=-2,this._inflight=!1}get event(){switch(this.type){case"tx":return this.hash;case"filter":return this.filter;default:return this.tag}}get type(){return this.tag.split(":")[0]}get hash(){let e=this.tag.split(":");if("tx"!==e[0])throw Error("Not a transaction event");return e[1]}get filter(){let e=this.tag.split(":");if("filter"!==e[0])throw Error("Not a transaction event");let t=e[1],r=deserializeTopics(e[2]),n={};return r.length>0&&(n.topics=r),t&&"*"!==t&&(n.address=t),n}pollable(){return this.tag.indexOf(":")>=0||["block","network","pending","poll"].indexOf(this.tag)>=0}};let EthersEvent=class EthersEvent extends Event{get fromAddress(){let e=this.tag.split(":");return e[0]!==ek?void 0:e[1]&&"*"!==e[1]?deserializeAddressField(e[1]):void 0}get toAddress(){let e=this.tag.split(":");return e[0]!==ek?void 0:e[2]&&"*"!==e[2]?deserializeAddressField(e[2]):void 0}get hashesOnly(){let e=this.tag.split(":");return eI.includes(e[0])&&e[3]&&"*"!==e[3]?"true"===e[3]:void 0}get includeRemoved(){let e=this.tag.split(":");return e[0]!==eC?void 0:e[2]&&"*"!==e[2]?"true"===e[2]:void 0}get addresses(){let e=this.tag.split(":");return e[0]!==eC?void 0:e[1]&&"*"!==e[1]?deserializeAddressesField(e[1]):void 0}};function isAlchemyEvent(e){return"object"==typeof e&&"method"in e}function getAlchemyEventTag(e){if(!isAlchemyEvent(e))throw Error("Event tag requires AlchemyEventType");if(e.method===M.PENDING_TRANSACTIONS)return serializePendingTransactionsEvent(e);if(e.method===M.MINED_TRANSACTIONS)return serializeMinedTransactionsEvent(e);throw Error(`Unrecognized AlchemyFilterEvent: ${e}`)}function verifyAlchemyEventName(e){if(!Object.values(M).includes(e.method))throw Error(`Invalid method name ${e.method}. Accepted method names: ${Object.values(M)}`)}function serializePendingTransactionsEvent(e){let t=serializeAddressField(e.fromAddress),r=serializeAddressField(e.toAddress),n=serializeBooleanField(e.hashesOnly);return ek+":"+t+":"+r+":"+n}function serializeMinedTransactionsEvent(e){let t=serializeAddressesField(e.addresses),r=serializeBooleanField(e.includeRemoved),n=serializeBooleanField(e.hashesOnly);return eC+":"+t+":"+r+":"+n}function serializeAddressesField(e){return void 0===e?"*":e.map(e=>serializeAddressField(e.to)+","+serializeAddressField(e.from)).join("|")}function serializeAddressField(e){return void 0===e?"*":Array.isArray(e)?e.join("|"):e}function serializeBooleanField(e){return void 0===e?"*":e.toString()}function deserializeTopics(e){return""===e?[]:e.split(/&/g).map(e=>{if(""===e)return[];let t=e.split("|").map(e=>"null"===e?null:e);return 1===t.length?t[0]:t})}function deserializeAddressField(e){if(""===e)return;let t=e.split("|");return 1===t.length?t[0]:t}function deserializeAddressesField(e){if(""!==e)return e.split("|").map(e=>e.split(",")).map(e=>Object.assign(Object.assign({},"*"!==e[0]&&{to:e[0]}),"*"!==e[1]&&{from:e[1]}))}let WebSocketNamespace=class WebSocketNamespace{constructor(e){this.config=e}on(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getWebSocketProvider(),n=yield this._resolveEnsAlchemyEvent(e);r.on(n,t)}),this}once(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getWebSocketProvider(),n=yield this._resolveEnsAlchemyEvent(e);r.once(n,t)}),this}off(e,t){return __awaiter$1(this,void 0,void 0,function*(){let r=yield this.config.getWebSocketProvider(),n=yield this._resolveEnsAlchemyEvent(e);return r.off(n,t)}),this}removeAllListeners(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getWebSocketProvider(),r=e?yield this._resolveEnsAlchemyEvent(e):void 0;t.removeAllListeners(r)}),this}listenerCount(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getWebSocketProvider(),r=e?yield this._resolveEnsAlchemyEvent(e):void 0;return t.listenerCount(r)})}listeners(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getWebSocketProvider(),r=e?yield this._resolveEnsAlchemyEvent(e):void 0;return t.listeners(r)})}_resolveEnsAlchemyEvent(e){return __awaiter$1(this,void 0,void 0,function*(){if(!isAlchemyEvent(e))return e;if(e.method===M.MINED_TRANSACTIONS&&e.addresses){let t=[];for(let r of e.addresses)r.to&&(r.to=yield this._resolveNameOrError(r.to)),r.from&&(r.from=yield this._resolveNameOrError(r.from)),t.push(r);e.addresses=t}else e.method===M.PENDING_TRANSACTIONS&&(e.fromAddress&&("string"==typeof e.fromAddress?e.fromAddress=yield this._resolveNameOrError(e.fromAddress):e.fromAddress=yield Promise.all(e.fromAddress.map(e=>this._resolveNameOrError(e)))),e.toAddress&&("string"==typeof e.toAddress?e.toAddress=yield this._resolveNameOrError(e.toAddress):e.toAddress=yield Promise.all(e.toAddress.map(e=>this._resolveNameOrError(e)))));return e})}_resolveNameOrError(e){return __awaiter$1(this,void 0,void 0,function*(){let t=yield this.config.getProvider(),r=yield t.resolveName(e);if(null===r)throw Error(`Unable to resolve the ENS address: ${e}`);return r})}};let Alchemy=class Alchemy{constructor(e){this.config=new AlchemyConfig(e),this.core=new CoreNamespace(this.config),this.nft=new NftNamespace(this.config),this.ws=new WebSocketNamespace(this.config),this.transact=new TransactNamespace(this.config),this.notify=new NotifyNamespace(this.config),this.debug=new DebugNamespace(this.config)}}}}]);